/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package java2.testUI;

import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Action;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lnmin
 */
public class EmployeeManager extends javax.swing.JFrame {

    private Vector<String> tableTitle;
    private Vector<Vector> tableData;
    private Vector<Employee> employees;
    private int SelectedRow;

    /**
     * Creates new form EmployeeManager
     */
    public EmployeeManager() {
        initComponents();
        loadTableEmployee();
    }

    private void loadTableEmployee() {
        loadTableTitle();
        loadTableData();
        showOnTable();
    }

    private void loadTableTitle() {
        tableTitle = new Vector<>();
        tableTitle.add("ID");
        tableTitle.add("NAME");
        tableTitle.add("GENDER");
        tableTitle.add("AGE");
    }

    private void loadTableData() {
        tableData = new Vector<>();
        employees = new Vector<>();
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_loadEmployees}";
            try (CallableStatement cstmt = conn.prepareCall(sql); ResultSet rs = cstmt.executeQuery()) {
                while (rs.next()) {
                    employees.add(new Employee(rs.getInt("id"), rs.getString("name"),
                            rs.getBoolean("gender"), rs.getInt("age")));

                }
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "lỗi tải dữ liệu");
        }

        for (Employee employee : employees) {
            Vector<String> temp = new Vector<>();
            temp.add(Integer.toString(employee.getId()));
            temp.add(employee.getName());
            temp.add((employee.isGender() ? "Male" : "Female"));
            temp.add(Integer.toString(employee.getAge()));
            tableData.add(temp);
        }
    }

    private void showOnTable() {
        DefaultTableModel dtm = new DefaultTableModel(tableData, tableTitle) {
            @Override
            public boolean isCellEditable(int i, int i1) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }

        };
        tblEmployee.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnFunction = new javax.swing.JPanel();
        lblID = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cboGender = new javax.swing.JCheckBox();
        scTable = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblID.setText("ID");

        txtID.setColumns(16);

        txtName.setColumns(16);

        lblName.setText("Name");

        lblAge.setText("Age");

        txtAge.setColumns(16);

        lblGender.setText("Gender");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        cboGender.setText("Male");

        javax.swing.GroupLayout pnFunctionLayout = new javax.swing.GroupLayout(pnFunction);
        pnFunction.setLayout(pnFunctionLayout);
        pnFunctionLayout.setHorizontalGroup(
            pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFunctionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnFunctionLayout.createSequentialGroup()
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnFunctionLayout.createSequentialGroup()
                        .addComponent(lblID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblGender, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboGender))
                .addGap(18, 18, 18)
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnFunctionLayout.setVerticalGroup(
            pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnFunctionLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblAge)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnAdd)
                        .addComponent(btnSearch))
                    .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblID)
                        .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblGender)
                        .addComponent(btnUpdate)
                        .addComponent(btnDelete)
                        .addComponent(cboGender))
                    .addGroup(pnFunctionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblName)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        getContentPane().add(pnFunction, java.awt.BorderLayout.PAGE_START);

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        scTable.setViewportView(tblEmployee);

        getContentPane().add(scTable, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        // TODO add your handling code here:
        showOnFields();
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void showOnFields() {
        SelectedRow = tblEmployee.getSelectedRow();
        txtID.setText((String) tblEmployee.getValueAt(SelectedRow, 0));
        txtName.setText((String) tblEmployee.getValueAt(SelectedRow, 1));
        cboGender.setSelected(tblEmployee.getValueAt(SelectedRow, 2).toString().equalsIgnoreCase("Male"));
        txtAge.setText((String) tblEmployee.getValueAt(SelectedRow, 3));
    }

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        addEmployee();
    }//GEN-LAST:event_btnAddActionPerformed
    private void addEmployee() {
        if (isNullTextField(txtName)) {
            JOptionPane.showMessageDialog(this, "Fill 'Name' field before add");
            return;
        }
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_addEmployee(?,?,?)}";
            try (CallableStatement cstmt = conn.prepareCall(sql)) {
                cstmt.setString(1, txtName.getText());
                cstmt.setBoolean(2, cboGender.isSelected());
                if (isNullTextField(txtAge)) {
                    cstmt.setNull(3, java.sql.Types.INTEGER);
                } else {
                    cstmt.setInt(3, Integer.valueOf(txtAge.getText()));
                }
                cstmt.executeUpdate();
                loadTableEmployee();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "error while add to database");
        }

    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        delEmployee();

    }//GEN-LAST:event_btnDeleteActionPerformed
    private void delEmployee() {
        if (isNullTextField(txtID)) {
            JOptionPane.showMessageDialog(this, "Fill 'ID' field before delete");
            return;
        }
        String sql = "DELETE FROM employee WHERE id  = ?";
        try (Connection conn = ConnectDatabase.getConnectDatabase();
                PreparedStatement pstmt = conn.prepareStatement(sql)) {
            pstmt.setInt(1, Integer.valueOf(txtID.getText()));
            pstmt.executeUpdate();
            loadTableEmployee();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error while delete from database ");
        }

    }
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        updateEmployee();
    }//GEN-LAST:event_btnUpdateActionPerformed
    private void updateEmployee() {
        if (isNullTextField(txtID) || isNullTextField(txtName)) {
            JOptionPane.showMessageDialog(this, "Fill 'ID' and 'name' fields before delete");
            return;
        }
        try (Connection conn = ConnectDatabase.getConnectDatabase()) {
            String sql = "{call sp_updateEmployee(?,?,?,?)}";
            try (CallableStatement cstmt = conn.prepareCall(sql)) {
                cstmt.setInt(1, Integer.valueOf(txtID.getText()));
                cstmt.setString(2, txtName.getText());
                cstmt.setBoolean(3, cboGender.isSelected());
                if (isNullTextField(txtAge)) {
                    cstmt.setNull(4, java.sql.Types.INTEGER);
                } else {
                    cstmt.setInt(4, Integer.valueOf(txtAge.getText()));
                }
                cstmt.executeUpdate();
                loadTableEmployee();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "error while update in database");
        }
    }
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        searchByID();
    }//GEN-LAST:event_btnSearchActionPerformed
    private void searchByID() {
        if (isNullTextField(txtID)) {
            JOptionPane.showMessageDialog(this, "Fill 'ID' field before search");
            return;
        }
        int id = Integer.valueOf(txtID.getText());
        for (Employee employee : employees) {
            if(employee.getId()==id){
                int index = employees.indexOf(employee);
                tblEmployee.setRowSelectionInterval(index, index);
                showOnFields();
            }
        }
    }

    private boolean isNullTextField(JTextField txtTextField) {
        return txtTextField.getText().trim().equalsIgnoreCase("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox cboGender;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblName;
    private javax.swing.JPanel pnFunction;
    private javax.swing.JScrollPane scTable;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables

}
