/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.TableButtonEditor;
import controller.TableButtonRenderer;
import static controller.TableImageEditor.getScaledImages;
import static controller.TableImageEditor.loadImages;
import controller.TableImageRenderer;
import controller.connectDatabase;
import java.awt.image.BufferedImage;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JCheckBox;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import model.users;

/**
 *
 * @author nguyenducthao
 */
public class frmmain extends javax.swing.JFrame {

    ArrayList<users> arrayListUsers = new ArrayList<>();
    Vector rowTable = new Vector();
    Vector dataTable = new Vector();

    /**
     * Creates new form main
     */
    public frmmain() throws SQLException, IOException, FileNotFoundException, InterruptedException {
        initComponents();
        createArrayListUser();
        LoadTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnCreateNewUser = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable(){
            //public boolean isCellEditable(int rowIndex, int columnIndex) {
                //if(columnIndex!=(tblUsers.getColumnCount()-1))
                //return false;
                //else
                //return true;
                //}
        };

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JTable Demo");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("List of users"));
        jPanel1.setToolTipText("");

        btnCreateNewUser.setText("Create new user");
        btnCreateNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewUserActionPerformed(evt);
            }
        });

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUsers);
        if (tblUsers.getColumnModel().getColumnCount() > 0) {
            tblUsers.getColumnModel().getColumn(0).setResizable(false);
            tblUsers.getColumnModel().getColumn(1).setResizable(false);
            tblUsers.getColumnModel().getColumn(2).setResizable(false);
            tblUsers.getColumnModel().getColumn(3).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreateNewUser))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnCreateNewUser)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewUserActionPerformed
        // TODO add your handling code here:
        frmCreateNewUser newUser = new frmCreateNewUser(this, true);
        newUser.setVisible(true);
        newUser.setModal(true);
    }//GEN-LAST:event_btnCreateNewUserActionPerformed

    /**
     * @param args the command line arguments
     */
    void createArrayListUser() throws SQLException, FileNotFoundException, IOException, InterruptedException {
        Connection conn;
        Statement stmt;

        arrayListUsers = new ArrayList<>();
        conn = connectDatabase.getConnectTable();
        String sql = "SELECT username, password, gender, filename_avatar, image_avatar FROM users";
        stmt = conn.createStatement();
        try (ResultSet rs = stmt.executeQuery(sql)) {
            while (rs.next()) {
                arrayListUsers.add(new users(
                        rs.getString("username"),
                        rs.getString("password"),
                        rs.getBoolean("gender"),
                        rs.getString("filename_avatar"),
                        rs.getBytes("image_avatar")));
            }
        }
        stmt.close();
        conn.close();
        for (int i = 0; i < arrayListUsers.size(); i++) {
            OutputStream targetFile = new FileOutputStream("./src/temp/" + arrayListUsers.get(i).getFilename_avatar());
            targetFile.write(arrayListUsers.get(i).getImage_avatar());
            Thread.sleep(1000);
        }
    }

    void LoadTableData() throws IOException {
        Vector<String> vFileNameAvatar = new Vector<>();
        for (int i = 0; i < arrayListUsers.size(); i++) {
            System.out.println(i);
            vFileNameAvatar.add("/temp/" + arrayListUsers.get(i).getFilename_avatar());
        }
        final int FIT = 0,
                FILL = 1;
        BufferedImage[] images = loadImages(vFileNameAvatar);
        BufferedImage[] scaled = getScaledImages(images, FILL);

        rowTable = new Vector();
        rowTable.add("No.");
        rowTable.add("Avatar");
        rowTable.add("Gender");
        rowTable.add("Username");
        rowTable.add("Delete");

        dataTable = new Vector();
        for (int i = 0; i < arrayListUsers.size(); i++) {
            Vector temp = new Vector();
            temp.add(i + 1);
            temp.add(images[i]);
            temp.add(arrayListUsers.get(i).isGender());
            temp.add(arrayListUsers.get(i).getUsername());
            temp.add("Delete");
            dataTable.add(temp);
        }

        DefaultTableModel model = new DefaultTableModel(dataTable, rowTable) {
            public Class getColumnClass(int col) {
                Vector vTemp = new Vector();
                vTemp = (Vector) dataTable.elementAt(0);
                return vTemp.elementAt(col).getClass();
//                return allData[col][0].getClass();
            }

            public boolean isCellEditable(int row, int col) {
                if ((col == 2) || (col == 4)) {
                    return true;
                } else {
                    return false;
                }
            }
        };
        tblUsers.setModel(model);
        tblUsers.getColumn("Delete").setCellRenderer(new TableButtonRenderer());
        tblUsers.getColumn("Delete").setCellEditor(new TableButtonEditor(new JCheckBox()));
        tblUsers.setDefaultRenderer(BufferedImage.class, new TableImageRenderer());
        tblUsers.setRowHeight(scaled[0].getHeight());
        TableColumnModel tcm = tblUsers.getColumnModel();
        tcm.getColumn(0).setPreferredWidth(10);
        tcm.getColumn(1).setPreferredWidth(200);
        tcm.getColumn(2).setPreferredWidth(70);
//        DefaultTableModel model = new DefaultTableModel();
//        model.setDataVector(dataTable, rowTable);
//        tblUsers.setModel(model);
//        tblUsers.getColumn("Delete").setCellRenderer(new TableButtonRenderer());
//        tblUsers.getColumn("Delete").setCellEditor(new TableButtonEditor(new JCheckBox()));
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmmain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmmain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmmain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmmain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
                } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
                    Logger.getLogger(frmmain.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    new frmmain().setVisible(true);
                } catch (SQLException | IOException ex) {
                    Logger.getLogger(frmmain.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(frmmain.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateNewUser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblUsers;
    // End of variables declaration//GEN-END:variables
}
